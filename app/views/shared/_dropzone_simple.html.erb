<%
  instance = locals[:f].object
  remove_hidden_name = "#{instance.class.name.underscore}[remove_#{locals[:field]}]"
  label = locals[:label] || t("simple_form.labels.defaults.#{locals[:field]}")
  accepted_files = instance.send("#{locals[:field]}_attachment_definition").valid_content_types.join(', ') if instance.send("#{locals[:field]}_attachment_definition").valid_content_types
%>
<%= locals[:f].input locals[:field], as: :attachment, direct: true, label: false, input_html: {style: 'display: none;', 'data-remove-hidden-name': remove_hidden_name} %>
<div class="form-group">
 <label class="col-xs-12 col-sm-3 control-label" for=""><%= label %></label>
 <div class="col-sm-8">
   <div class="upload-dropzone dropzone dz-clickable" data-upload-field="images" id="dropzoneSimple">
     <div class="dz-default dz-message">
       <div class="col-xs-12">
         <h3><i class="fa fa-caret-right text-danger"></i> <%= t('simple_form.screen.click_or_drop_file') %>.</h3>
       </div>
     </div>
   </div>
 </div>
</div>

<% if instance.send(locals[:field]) %>
   <%= locals[:f].input "remove_#{locals[:field]}".to_sym, as: :boolean, wrapper: :clean, input_html: {style: 'display: none;'} %>
   <script type="text/javascript">
     var file_exist = true;
   </script>
   <% else %>
     <script type="text/javascript">
       var file_exist = false;
     </script>
<% end %>

<%= render 'shared/dropzone_shared' %>

<script type="text/javascript">
    Dropzone.options.dropzoneSimple = {
        maxFiles: 1,
        maxFilesize: <%= locals[:max_filesize] %>,
        acceptedFiles: '<%= accepted_files %>',
        dictDefaultMessage: '<%= t('simple_form.screen.click_or_drop_files') %>',
        dictFallbackMessage: '<%= t('simple_form.screen.not_support_drag_drop') %>',
        dictFallbackText: '<%= t('simple_form.screen.use_the_form_below') %>',
        dictFileTooBig: '<%= t('simple_form.screen.file_is_too_big') %> ({{filesize}}Mb). <%= t('simple_form.screen.max_filesize') %>: {{maxFilesize}}Mb.',
        dictInvalidFileType: '<%= t('simple_form.screen.cant_upload_this_type') %>',
        dictResponseError: '<%= t('simple_form.screen.server_responded_with_code') %>: {{statusCode}}',
        dictCancelUpload: '<%= t('simple_form.screen.cancel_upload') %>',
        dictCancelUploadConfirmation: '<%= t('simple_form.screen.are_you_sure_cancel_upload') %>',
        dictRemoveFile: '<%= t('simple_form.screen.remove_file') %>',
        dictRemoveFileConfirmation: null,
        dictMaxFilesExceeded: '<%= t('simple_form.screen.cant_upload_any_more_files') %>',
        init: function (file, done) {
            thisDropzone = this;
            var mockFile = {};
            mockFile = {
                name: file_exist ? '<%= instance.send("#{locals[:field]}_filename".to_sym) %>' : '',
                size: file_exist ? '<%= instance.send("#{locals[:field]}_size".to_sym) %>' : '',
                type: file_exist ? '<%= instance.send("#{locals[:field]}_content_type".to_sym) %>' : '',
                hidden_name: file_exist ? '<%= remove_hidden_name %>' : ''
            };
            if (file_exist) {
                thisDropzone.options.addedfile.call(thisDropzone, mockFile);
            }
            thisDropzone.options.thumbnail.call(thisDropzone, mockFile, '<%= attachment_url(instance, locals[:field], :fill, 100, 100) %>');
            noImage(mockFile);
            $('#dropzoneSimple').removeClass('dz-started');
            $('.dz-image').children().before('<i class="fileUploadedCheck fa fa-2x fa-check-circle"></i>');
            $('.dz-progress').fadeOut();
        },
        accept: function (file, done) {
            back_files_news(file, done);
        }
    }
</script>
